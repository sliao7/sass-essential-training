
// define variables
// $bg: #ead;
@use "variables" as var;
@use "base";
@use "sass:color";

////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Chapter 2 challenge solution. Applying mixin, each, map, if, else, and color method to create badges systematically
$black_ratio: 50%;

$badges: (
    "-primary": (
        var.$primary,
        White
    ),

    "-danger": (
        red,
        White
    ),

    "info": (
        var.$secondary,
        white
    )
);

@mixin badge($name: "", $background_color: grey, $color:white, $style: null) {
    
    .badge#{$name} {
        border: 0;
        @if $style == 'pill' {
            border-radius: 30px !important;
            padding: 0, 0.6em !important;
        } @else {
            border-radius: 5px;
            padding: 0, 0.3em;
        }
        
        background: $background_color;
        font-size: 0.8em;
        color: $color;
        margin: 0.1em;
        display: inline-block;
        cursor: pointer;
        &:hover {
            background: color.scale($background_color, $lightness: -30%)
        }
      }
}

  
@include badge("");
@include badge("pill");
@each $key, $values in $badges {
    @include badge($key, $values...)
}
  

////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Lists: s
//// paces, commas; 
//// brackets [] or parenthesis (); 
//// quote when spaces
//// indexed at 1;
//// All the following $myArray are the same!
$myArray: primary secondary warning "item info";
$myArray: primary, secondary, warning, "item info";
// $myArray: [primary, secondary, warning, "item info" ];  not working
$myArray: (primary, secondary, warning, "item info" );

//// List methods:



////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Placeholder Selectors. Starts with %, it won't be created itself
%button {
  background: #444;
  color: white;
}

.button {
  @extend %button;
  background: #3ab5e9;
}

.button-primary {
  @extend %button;
  background: orange;
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Interpolation: easy to create a series of stuff
// @mixin button($name:"", $bg: #444, $color: white) {
//   .button#{$name} {
//     background: $bg;
//     color: $color;
//   }
// }

// @include button;
// @include button("-primary", #3ab5e9);


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Chapter 2 Sass Fundamentals challenge soluntion using mixin, nesting, and parent selector
@mixin msg($color:color.scale(var.$primary, $blackness: -50%)) {
  border: 1px solid #ddd;
  border-radius: 5px;
  background: $color;
  font-size: 1rem;
  color: white;
  padding: 1rem 1.25rem;
  margin: 1em 0;
  display: inline-block;
  cursor: pointer;
  
  &:hover {
    background: #555;
  }

  h1 {
    margin: 0 0 0.2em 0;
    font-size: 2.5em;
  }
  
}

.msg {
  @include msg;

  &-info {
    background: var.$primary;
    &:hover {
      background: #1a5353;
    }
  }

  &-info-darker {
    background: color.scale(var.$primary, $blackness: 50%);
  }
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Extend: more efficient than mixins as it does not copy
// .button {
//   border: 0;
//   &:hover {
//     background: white;
//   }
  
//   &-primary {
//     @extend .button;
//     background: #3ab;
//   }

//   &-secondary {
//     @extend .button;
//     background: orange;
//   }

// }


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Mixins: like functions, very flexible
// @mixin button($col:#d0c2c2) {
//   background-color: $col;
//   border-radius: 5px;
// }

// .button {
//   @include button; // basically copy the button mixin

//   &:hover {
//    background: #800;
//   }
  

//   &-primary {
//     @include button($col: #3ab);
//     color: yellow;
//   }
// }


////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// Parent selector
//// A selector starting with a period indicates it is a class selector
// .button {
//   border: 0;
//   border-radius: 5px;
//   background: #c4b4c4b2;

//   &:hover {
//     background: #800;
//   }

// will be used as button button-primary
//   &-primary {
//     background: #3ab;
//   }

//   .container & {
//     float: right;
//     margin-left: 0.5em;
//   }

// }

// h1 {
//   color: var.$primary;
// }



////////////////////////////////////////////////////////////////////////////////////////////////////////////
//// The following code was generated automatically when the file was created
// :root {
//   font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
//   line-height: 1.5;
//   font-weight: 400;

//   color-scheme: light dark;
//   color: rgba(255, 255, 255, 0.87);
//   background-color: #242424;

//   font-synthesis: none;
//   text-rendering: optimizeLegibility;
//   -webkit-font-smoothing: antialiased;
//   -moz-osx-font-smoothing: grayscale;
// }

// a {
//   font-weight: 500;
//   color: #646cff;
//   text-decoration: inherit;
// }
// a:hover {
//   color: #535bf2;
// }

// h1 {
//   font-size: 3.2em;
//   line-height: 1.1;
// }

// #app {
//   max-width: 1280px;
//   margin: 0 auto;
//   padding: 2rem;
//   text-align: center;
// }

// .logo {
//   height: 6em;
//   padding: 1.5em;
//   will-change: filter;
//   transition: filter 300ms;
// }
// .logo:hover {
//   filter: drop-shadow(0 0 2em #646cffaa);
// }
// .logo.vanilla:hover {
//   filter: drop-shadow(0 0 2em #f7df1eaa);
// }

// .card {
//   padding: 2em;
// }

// .read-the-docs {
//   color: #888;
// }

// button {
//   border-radius: 8px;
//   border: 1px solid transparent;
//   padding: 0.6em 1.2em;
//   font-size: 1em;
//   font-weight: 500;
//   font-family: inherit;
//   background-color: #1a1a1a;
//   cursor: pointer;
//   transition: border-color 0.25s;
// }
// button:hover {
//   border-color: #646cff;
// }
// button:focus,
// button:focus-visible {
//   outline: 4px auto -webkit-focus-ring-color;
// }

// @media (prefers-color-scheme: light) {
//   :root {
//     color: #213547;
//     background-color: #ffffff;
//   }
//   a:hover {
//     color: #747bff;
//   }
//   button {
//     background-color: #f9f9f9;
//   }
// }
